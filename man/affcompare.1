.TH affcompare "1"  "Oct 2014" "AFFCOMPARE 3.7.4" "compare the contents of an ISO file to an AFF file"
.\"Text automatically generated by txt2man
.SH NAME
\fBaffcompare \fP- compare the contents of an ISO file to an AFF file
.SH SYNOPSIS
.nf
.fam C
\fBaffcompare\fP [\fIoptions\fP] \fIfile1\fP \fIfile2\fP
\fBaffcompare\fP [\fIoptions\fP] \fB-r\fP \fIdir1\fP \fIdir2\fP
\fBaffcompare\fP [\fIoptions\fP] \fB-s\fP \fIfile1\fP \fIfile2\fP\.\.\.
.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Compare the contents of an ISO file to an AFF file. Optionally, if they are
equal, delete the ISO file.
.PP
This file is part of the AFFLIBv3, that provides AFF.
.PP
AFF is an open and extensible file format to store disk images and associated
metadata. It is useful in several scenaries, as computer forensics
investigations.
.SH OPTIONS
Fast \fIoptions\fP (compare segments but not their contents):
.RS
.TP
.B
\fB-e\fP
Just report about existence (use with \fB-r\fP).
.TP
.B
\fB-p\fP
Report about the results of preening.
.TP
.B
\fB-r\fP
\fIdir1\fP \fIdir2\fP  Recursively compare what's in \fIdir1\fP with \fIdir2\fP, and
report what's in \fIdir1\fP that's not in \fIdir2\fP.
.TP
.B
\fB-s\fP
Check to see if named files are on Amazon S3.
.RE
.PP
Other \fIoptions\fP:
.RS
.TP
.B
\fB-a\fP
Print what's the same (all).
.TP
.B
\fB-b\fP
Print the numbers of differing sectors.
.TP
.B
\fB-c\fP
Print the contents of differing sectors.
.TP
.B
\fB-h\fP
Show help page.
.TP
.B
\fB-m\fP
Just report about the data (ignore metadata).
.TP
.B
\fB-P\fP <n>
Just examine the differences on page 'n'.
.TP
.B
\fB-q\fP
Quiet. No output except for errors.
.TP
.B
\fB-V\fP
Just print the version number and exit.
.TP
.B
\fB-v\fP
Verbose. Show each file as it is compared.
.SH EXAMPLES
Compare \fIfile1\fP with \fIfile2\fP:
.PP
.nf
.fam C
    $ affcompare file1.aff file2.aff

.fam T
.fi
Compare similarly-named files in \fIdir1\fP/ and \fIdir2\fP/:
.PP
.nf
.fam C
    $ affcompare \-r dir1 dir2

.fam T
.fi
Reports if files were successfully copied to Amazon S3 checking only for
existence, not reading back the bytes (because all writes to S3 are
validated by the MD5 of the object):
.PP
.nf
.fam C
    $ affcompare \-s file1.aff file2.aff file3.aff

.fam T
.fi
Compare f1.aff with \fIdir1\fP/f1.aff and f2.aff with \fIdir2\fP/f2.aff:
.PP
.nf
.fam C
    $ affcompare f1.aff f2.aff dir1/

.fam T
.fi
note that \fIdir1\fP/ must end with a slash.
.PP
Compare file.aff and file.img:
.PP
.nf
.fam C
    $ affcompare \-b img file.aff

.fam T
.fi
Compare file1.aff, file1.img, etc.:
.PP
.nf
.fam C
    $ affcompare \-b img file1.aff file2.aff file3.aff

.fam T
.fi
Report AFF files in \fIdir1\fP but not in \fIdir2\fP:
.PP
.nf
.fam C
    $ affcompare \-re dir1 dir2

.fam T
.fi
Report AFF files in \fIdir1\fP but not on S3 (low bandwidth):
.PP
.nf
.fam C
    $ affcompare \-rse dir1 s3:///

.fam T
.fi
Report AFF files in \fIdir1\fP but incomplete on on S3 (more bandwidth):
.PP
.nf
.fam C
    $ affcompare \-rs dir1 s3:///
.fam T
.fi
.SH SEE ALSO
\fBaffcat\fP(1), \fBaffconvert\fP(1), \fBaffcopy\fP(1), \fBaffcrypto\fP(1), \fBaffdiskprint\fP(1),
\fBaffinfo\fP(1), \fBaffix\fP(1), \fBaffrecover\fP(1), \fBaffsegment\fP(1), \fBaffsign\fP(1),
\fBaffstats\fP(1), \fBaffuse\fP(1), \fBaffverify\fP(1), \fBaffxml\fP(1)
.SH AUTHOR
The AFFLIB was written by Simson L. Garfinkel <simsong@acm.org> and Basis
Technology, Inc.
.PP
This manual page was written by Joao Eriberto Mota Filho <eriberto@debian.org>
for the Debian project (but may be used by others).
